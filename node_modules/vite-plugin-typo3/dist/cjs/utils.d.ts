import type { InputOption } from "rollup";
import { type Alias, type AliasOptions, type Logger } from "vite";
import type { ComposerContext, PluginConfig, PluginTarget, UserConfig, Typo3ProjectContext, Typo3ExtensionContext, AliasConfig } from "./types.js";
export declare function initializePluginConfig<T extends ComposerContext>(userConfig: UserConfig, root: string): PluginConfig<T>;
export declare function collectComposerChain(path: string): ComposerContext[];
export declare function createComposerContext(json: any, path: string): ComposerContext;
export declare function determineComposerContext<T extends ComposerContext>(target: PluginTarget, chain: ComposerContext[]): T | undefined;
export declare function findEntrypointsInExtensions(extensions: Typo3ExtensionContext[], entrypointFile: string, entrypointIgnorePatterns: string[]): string[];
export declare function determineAvailableTypo3Extensions(composerContext: Typo3ProjectContext): Typo3ExtensionContext[];
export declare function outputDebugInformation(availableExtensions: Typo3ExtensionContext[], entrypoints: string[], composerContext: ComposerContext, logger: Logger, aliasConfig?: AliasConfig): void;
export declare function addRollupInputs(input: InputOption | undefined, additionalInputs: string[]): InputOption;
export declare function addAliases(alias: AliasOptions | undefined, extensions: Typo3ExtensionContext[], config?: AliasConfig): AliasOptions;
export declare function createAliases(extensions: Typo3ExtensionContext[], config: AliasConfig): Alias[];
export declare function readJsonFile(file: string): any;
export declare function getDefaultIgnoreList(): string[];
export declare function getDefaultAllowedOrigins(): RegExp[];
